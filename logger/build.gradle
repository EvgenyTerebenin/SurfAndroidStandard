apply plugin: 'com.android.library'

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion config["compileSdkVersion"]
    buildToolsVersion config["buildToolsVersion"]

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode rootProject.ext.moduleVersionCode
        versionName rootProject.ext.moduleVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        qa {
            debuggable = true
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    def appcompatVersion = config["appcompatVersion"]
    def crashlyticsVersion = config["crashlyticsVersion"]
    def powerMockVersion = config["powerMockVersion"]

    provided "com.android.support:support-annotations:${appcompatVersion}"

    //logging
    api "com.jakewharton.timber:timber:4.5.1"
    api("com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}@aar") {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${powerMockVersion}"
    testImplementation "org.powermock:powermock-api-mockito:${powerMockVersion}"
    testImplementation "org.powermock:powermock-classloading-xstream:${powerMockVersion}"
}