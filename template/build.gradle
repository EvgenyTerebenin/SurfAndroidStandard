apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def config = rootProject.extensions.getByName("ext")

android {
    def applicationName = config["applicationName"]

    compileSdkVersion config["compileSdkVersion"]
    buildToolsVersion config["buildToolsVersion"]

    defaultConfig {
        minSdkVersion config["minSdkVersion"]
        targetSdkVersion config["targetSdkVersion"]

        applicationId config["applicationId"]
        versionCode config["versionCode"]
        versionName config["versionName"]

        setProperty("archivesBaseName", "$applicationName-$versionName-($versionCode)")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

kapt {
    generateStubs = true
}

dependencies {
    //-------------------------------------- versions ----------------------------------------------

    // Library, Apt versions
    def daggerVersion = config["daggerVersion"]
    def appcompatVersion = config["appcompatVersion"]
    def retrofitVersion = '2.1.0'
    def okHttpVersion = '3.4.1'

    //Kotlin
    def ankoVersion = config["ankoVersion"]

    //Testing Library, Apt Versions
    def mockitoVersion = '1.10.19'
    def assertJVersion = '3.5.1'

    //------------------------------------ dependencies --------------------------------------------
    implementation project(':core')
    implementation project(':analytics')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "com.google.dagger:dagger:${daggerVersion}"
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //provided
    kapt 'javax.annotation:jsr250-api:1.0'
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"

    //network
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    //other
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.1'
    implementation 'com.google.guava:guava:23.0-android'

    //kotlin
    implementation "org.jetbrains.anko:anko-common:$ankoVersion"

    //--------------------------------- test dependencies ------------------------------------------

    //tests
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation 'junit:junit:4.12'

    //unit test
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"

    //instrumental test
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    androidTestImplementation "com.android.support:support-annotations:${appcompatVersion}"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    implementation 'com.google.code.findbugs:jsr305:3.0.1'
}
