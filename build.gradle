// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'maven'
apply from: 'modules.gradle'

import com.android.build.gradle.LibraryPlugin

def modules = gradle.ext.extractModules('modules.json')*.name

allprojects {
    /*
    def taskNames = project.gradle.startParameter.taskNames
    if (taskNames.size() > 0) {
        println "$taskNames"
        def currentTaskName = taskNames.get(0)
        if (currentTaskName == 'uploadArchives' && it != rootProject && it.name != "test-module") {
            it.afterEvaluate {
                if (it.plugins.hasPlugin(LibraryPlugin)) {
                    it.apply from: "$rootDir/deploy.gradle"
                }
            }
        }
    }*/
    if (it != rootProject && it.name in modules) {
        it.afterEvaluate {
            println "$it.name"
            if (it.plugins.hasPlugin(LibraryPlugin)) {
                it.apply from: "$rootDir/deploy.gradle"
            }
        }
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "http://artifactory.surfstudio.ru/artifactory/libs-release-local" }
    }
}

buildscript {
    apply from: 'config.gradle'

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://maven.google.com' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleToolsVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.gms:google-services:$googleServicesVersion"
        classpath "io.fabric.tools:gradle:$fabricToolsVersion"
    }
}
